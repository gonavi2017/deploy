<form id="cleanupTimeForm" action="<c:url value='/admin/cleanupPolicies.html'/>" method="post"
      onsubmit="return BS.CleanupPoliciesForm.submitCleanupStartTime()">

  <input type="hidden" name="cleanupPageAction" id="cleanupPageAction0"/>

  <bs:messages key="cleanupProcessSettingsUpdated"/>

  <table class="runnerFormTable">
    <tr>
      <th>Start time:</th>
      <td>
        <authz:authorize allPermissions="CONFIGURE_SERVER_DATA_CLEANUP">
          <jsp:attribute name="ifAccessGranted">
            <admin:hourSelect disabled="${not cleanupPoliciesForm.cleanupEnabled}" name="hour" style="width: 45px;" selectedValue="${cleanupPoliciesForm.currentCleanupTime.hour}"/> h
            <admin:minuteSelect disabled="${not cleanupPoliciesForm.cleanupEnabled}" style="width: 45px;" name="minute" selectedValue="${cleanupPoliciesForm.currentCleanupTime.minute}"/> min &nbsp;&nbsp;
            <span class="error" style="margin-left: 17.5em;" id="error_cleanupTime"></span>
          </jsp:attribute>
          <jsp:attribute name="ifAccessDenied">
            <c:set var="hour" value="${cleanupPoliciesForm.currentCleanupTime.hour}"/>
            <c:set var="minute" value="${cleanupPoliciesForm.currentCleanupTime.minute}"/>
            <c:if test="${hour < 10}">0</c:if>${hour}:<c:if test="${minute < 10}">0</c:if>${minute}
          </jsp:attribute>
        </authz:authorize>
        <span class="smallNote">Next scheduled time:
          <c:choose>
            <c:when test="${not cleanupPoliciesForm.cleanupEnabled}">never</c:when>
            <c:otherwise><bs:date value="${cleanupPoliciesForm.nextCleanupDateTime}" pattern="dd MMM yy HH:mm 'GMT' Z"/></c:otherwise>
          </c:choose>
        </span>
      </td>
    </tr>
    <tr>
      <th>Stop clean-up if it takes longer than:</th>
      <td>
        <authz:authorize allPermissions="CONFIGURE_SERVER_DATA_CLEANUP">
          <jsp:attribute name="ifAccessGranted">
            <forms:textField disabled="${not cleanupPoliciesForm.cleanupEnabled}" name="maxCleanupDurationMins" value="${cleanupPoliciesForm.currentMaxCleanupDurationMinutes <= 0 ? '' : cleanupPoliciesForm.currentMaxCleanupDurationMinutes}" style="width: 7em;"/> minutes
            <span class="smallNote">Leave blank if there is no limit for clean-up duration</span>
          </jsp:attribute>
          <jsp:attribute name="ifAccessDenied">
            <c:if test="${cleanupPoliciesForm.currentMaxCleanupDurationMinutes > 0}">${cleanupPoliciesForm.currentMaxCleanupDurationMinutes} min</c:if>
            <c:if test="${cleanupPoliciesForm.currentMaxCleanupDurationMinutes <= 0}">unlimited</c:if>
          </jsp:attribute>
        </authz:authorize>
      </td>
    </tr>
    <authz:authorize allPermissions="CONFIGURE_SERVER_DATA_CLEANUP">
      <jsp:attribute name="ifAccessGranted">
    <tr>
      <td class="noBorder"></td>
      <td class="noBorder" style="padding-top: 0">
        <input class="btn btn_mini" <c:if test="${not cleanupPoliciesForm.cleanupEnabled}">disabled="disabled"</c:if> type="submit" id="saveButton" value="Save settings"/>&nbsp;<forms:saving id="savingSettings" className="progressRingInline"/>
      </td>
    </tr>
      </jsp:attribute>
    </authz:authorize>
  </table>

  <%--@elvariable id="previousCleanupRecord" type="jetbrains.buildServer.serverSide.cleanup.history.CleanupHistoryRecord"--%>
  <c:set var="cleanupDetails" value="${cleanupPoliciesForm.serverCleanupDetails}"/>
  <c:set var="currentData" value="${cleanupDetails.elapsedTime > 0}"/>

  <h2 class="cleanUp">Previous clean-up</h2>

  <table class="runnerFormTable">
    <tr>
      <th>Last time clean-up took:</th>
      <td>
        <c:if test="${not empty previousCleanupRecord}">
          <bs:printTime time="${(previousCleanupRecord.finishTime.time - previousCleanupRecord.startTime.time) / 1000}" showIfNotPositiveTime="&lt; 1s"/>
          (finished at <bs:date value="${previousCleanupRecord.finishTime}" pattern="dd MMM yy HH:mm 'GMT' Z"/>)
        </c:if>
        <c:if test="${empty previousCleanupRecord}">
          <em>no data</em>
        </c:if>

        <authz:authorize allPermissions="CONFIGURE_SERVER_DATA_CLEANUP">
          <c:if test="${cleanupPoliciesForm.cleanupCanBeStarted and not cleanupDetails.inProgress}">
            <br><input class="btn btn_mini" type="button" id="startCleanupButton" value="Start clean-up now"
                       onclick="BS.CleanupPoliciesForm.submitStartCleanup()"/>&nbsp;<forms:saving
              id="startingCleanup" className="progressRingInline"/>
          </c:if>
        </authz:authorize>

      </td>
    </tr>


    <c:choose>
      <c:when test="${not cleanupDetails.inProgress and cleanupDetails.interrupted}">

          <c:set var="interruptReason" value="${cleanupDetails.interruptReason}"/>
          <c:set var="interruptUser" value="${cleanupDetails.interruptUser}"/>
          <c:set var="additionalInfo">
            Processed <span title="${cleanupDetails.processedBuilds} builds out of ${cleanupDetails.buildsToProcess} total scheduled"><strong><bs:percent value="${cleanupDetails.processedBuilds}" total="${cleanupDetails.buildsToProcess}" fractionDigits="1"/></strong></span> of builds scheduled for cleanup.
          </c:set>
          <%@ include file="_cleanupInterruptDetails.jspf"%>

      </c:when>

      <c:when test="${not empty previousCleanupRecord and not empty previousCleanupRecord.interruptReason}">

          <c:set var="interruptReason" value="${previousCleanupRecord.interruptReason}"/>
          <%--@elvariable id="cleanupInterruptUser" type="jetbrains.buildServer.users.SUser"--%>
          <c:set var="interruptUser" value="${cleanupInterruptUser}"/>
          <c:set var="additionalInfo" value="${null}"/>
          <%@ include file="_cleanupInterruptDetails.jspf"%>

      </c:when>

    </c:choose>

  </table>




  <c:if test="${cleanupDetails.inProgress}">

    <h2 class="cleanUp">Current clean-up</h2>

    <table class="runnerFormTable">
      <tr>
        <th><span class="icon icon16 build-status-icon build-status-icon_running-green-transparent"></span>
          Cleanup is running for:</th>
        <td><span id="elapsedTime"><bs:printTime time="${cleanupDetails.elapsedTime / 1000}" showIfNotPositiveTime="&lt; 1s"/></span>
          (<span id="percentBuildsProcessed">
                  <c:if test="${cleanupDetails.processedBuilds == 0}">0%</c:if>
                  <c:if test="${cleanupDetails.processedBuilds > 0}"><bs:percent value="${cleanupDetails.processedBuilds}" total="${cleanupDetails.buildsToProcess}" fractionDigits="1"/></c:if>
              </span> builds processed)
        </td>
      </tr>
      <tr>
        <th>Current stage:</th>
        <td><span id="currentStage"><c:out value="${cleanupDetails.currentStage}"/></span>
          <c:if test="${afn:permissionGrantedGlobally('CONFIGURE_SERVER_DATA_CLEANUP') and not cleanupDetails.interrupted}">
            <input class="btn btn_mini" type="button" value="Stop clean-up" onclick="BS.CleanupPoliciesForm.submitStopCleanup()"/>
          </c:if>

          <c:if test="${cleanupDetails.interrupted}">
            <div class="icon_before icon16 attentionComment">Clean-up process is stopping, please wait till clean-up finishes current tasks.</div>
          </c:if>
        </td>
      </tr>

    </table>

  </c:if>


</form>

<script>
  <c:if test="${cleanupDetails.inProgress}">

  (function cleanupProgressUpdate(){

    var timeRefresher = null;
    var refreshTimeBetweenServerUpdates = function() {
      var timeText = $j('#elapsedTime').text();
      if (timeText.indexOf('h') > 0) {
        // Do not update seconds if > 1h of cleanup has passed
        return;
      }

      timeText = timeText.replace(/(\d+m)?:?(\d+s)?/, function(match, min, secs) {
        secs = parseInt(secs) || 0;
        if (secs < 59) {
          // Increase secs:
          secs = parseInt(secs) + 1;
          min = min ? min + ":" : '';
          return min + ( (secs < 10 && min != '') ? '0' + secs : secs) + 's';
        }

        // Increase the minute:
        min = (parseInt(min) || 0) + 1;
        return min + 'm';
      });
      $j('#elapsedTime').text(timeText);
    };

    var processXmlProgress = function(doc) {
      var inProgress = 'true' == doc.getAttribute('inProgress');
      var elapsedTime = doc.getAttribute('elapsedTime');
      var currentStatusText = doc.getAttribute('currentStatusText');

      var processedBuilds = doc.getAttribute('processedBuilds');
      var buildsToProcess = doc.getAttribute('buildsToProcess');
      var completed = 1000 * processedBuilds / buildsToProcess;
      completed = completed > 0 ? Math.round(completed) / 10.0 : 0;

      $j('#currentStage').text(currentStatusText);
      $j('#elapsedTime').text(elapsedTime);
      $j('#percentBuildsProcessed').text("" + completed + "%");

      if (!inProgress) {
        document.location.reload();
      }
      else {
        clearInterval(timeRefresher);
        timeRefresher = setInterval(refreshTimeBetweenServerUpdates, 1000);
      }
    };

    new BS.PeriodicalUpdater(null, window['base_uri'] + '/ajax.html?cleanupNotificatorProgress=true', {
      evalScripts: false,
      frequency: BS.internalProperty('teamcity.ui.cleanupNotificatorProgress.pollInterval'),
      onSuccess: function(transport) {
        if (transport.responseText.trim().length !== 0) { //server can respond with empty body if no event was published.
          processXmlProgress($j.parseXML(transport.responseText).documentElement);
        }
      }
    });

  })();
  </c:if>
</script>