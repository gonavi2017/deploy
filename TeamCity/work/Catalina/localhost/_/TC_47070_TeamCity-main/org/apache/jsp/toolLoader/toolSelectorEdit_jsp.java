/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.79
 * Generated at: 2017-09-23 02:31:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.toolLoader;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class toolSelectorEdit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(12);
    _jspx_dependants.put("/include.jsp", Long.valueOf(1504702504000L));
    _jspx_dependants.put("/WEB-INF/tags/forms/textField.tag", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/tags/forJs.tag", Long.valueOf(1504702504000L));
    _jspx_dependants.put("/WEB-INF/authz-functions.tld", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/tags/props/hiddenProperty.tag", Long.valueOf(1504702498000L));
    _jspx_dependants.put("/include-internal.jsp", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/tags/props/option.tag", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/util-functions.tld", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/change-functions.tld", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/tags/forms/select.tag", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/internal-props-functions.tld", Long.valueOf(1504702500000L));
    _jspx_dependants.put("/WEB-INF/user-functions.tld", Long.valueOf(1504702502000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"/runtimeError.html", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      java.lang.String versionRunnerParameterName = null;
      versionRunnerParameterName = (java.lang.String) _jspx_page_context.getAttribute("versionRunnerParameterName", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (versionRunnerParameterName == null){
        throw new java.lang.InstantiationException("bean versionRunnerParameterName not found within scope");
      }
      out.write("\r\n");
      out.write("\r\n");
      jetbrains.buildServer.tools.ToolVersionReference selectedVersion = null;
      selectedVersion = (jetbrains.buildServer.tools.ToolVersionReference) _jspx_page_context.getAttribute("selectedVersion", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (selectedVersion == null){
        throw new java.lang.InstantiationException("bean selectedVersion not found within scope");
      }
      out.write('\r');
      out.write('\n');
      java.util.Collection<jetbrains.buildServer.tools.ToolVersionReference> availableVersions = null;
      availableVersions = (java.util.Collection<jetbrains.buildServer.tools.ToolVersionReference>) _jspx_page_context.getAttribute("availableVersions", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (availableVersions == null){
        throw new java.lang.InstantiationException("bean availableVersions not found within scope");
      }
      out.write("\r\n");
      out.write("\r\n");
      java.lang.String toolCustomPath = null;
      toolCustomPath = (java.lang.String) _jspx_page_context.getAttribute("toolCustomPath", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (toolCustomPath == null){
        throw new java.lang.InstantiationException("bean toolCustomPath not found within scope");
      }
      out.write('\r');
      out.write('\n');
      java.lang.Boolean defaultVersionSpecified = null;
      defaultVersionSpecified = (java.lang.Boolean) _jspx_page_context.getAttribute("defaultVersionSpecified", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (defaultVersionSpecified == null){
        throw new java.lang.InstantiationException("bean defaultVersionSpecified not found within scope");
      }
      out.write("\r\n");
      out.write("\r\n");
      java.lang.String clazz = null;
      clazz = (java.lang.String) _jspx_page_context.getAttribute("clazz", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (clazz == null){
        throw new java.lang.InstantiationException("bean clazz not found within scope");
      }
      out.write('\r');
      out.write('\n');
      java.lang.String style = null;
      style = (java.lang.String) _jspx_page_context.getAttribute("style", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (style == null){
        throw new java.lang.InstantiationException("bean style not found within scope");
      }
      out.write("\r\n");
      out.write("\r\n");
      jetbrains.buildServer.tools.ToolType toolType = null;
      toolType = (jetbrains.buildServer.tools.ToolType) _jspx_page_context.getAttribute("toolType", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (toolType == null){
        throw new java.lang.InstantiationException("bean toolType not found within scope");
      }
      out.write('\r');
      out.write('\n');
      java.lang.String settingsUrl = null;
      settingsUrl = (java.lang.String) _jspx_page_context.getAttribute("settingsUrl", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (settingsUrl == null){
        throw new java.lang.InstantiationException("bean settingsUrl not found within scope");
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  if (!BS) BS = {};\r\n");
      out.write("\r\n");
      out.write("  if (!BS.Tools) BS.Tools = {\r\n");
      out.write("    selectors : new Array(),\r\n");
      out.write("\r\n");
      out.write("    getVersionSelector: function(toolType){\r\n");
      out.write("      var result = $j.grep(this.selectors, function(e){ return e.toolType == toolType; });\r\n");
      out.write("\r\n");
      out.write("      function VersionSelector(toolType) {\r\n");
      out.write("        this.toolType = toolType,\r\n");
      out.write("\r\n");
      out.write("            this.init = function (fieldName, customPath) {\r\n");
      out.write("              this.hiddenFieldName = fieldName;\r\n");
      out.write("              this.toolCustomPath = customPath;\r\n");
      out.write("              this.customPathContainer = $('customPathContainer' + toolType);\r\n");
      out.write("              this.toolPathSelector = $('toolPathSelector' + toolType);\r\n");
      out.write("              this.customPathTextField = $('toolCustomPath' + toolType);\r\n");
      out.write("            },\r\n");
      out.write("\r\n");
      out.write("            this.setValue = function (x) {\r\n");
      out.write("              $(this.hiddenFieldName).value = x;\r\n");
      out.write("            },\r\n");
      out.write("\r\n");
      out.write("            this.getValue = function () {\r\n");
      out.write("              return $(this.hiddenFieldName).value;\r\n");
      out.write("            },\r\n");
      out.write("\r\n");
      out.write("            this.selectionChanged = function () {\r\n");
      out.write("              var selectedValue = this.toolPathSelector.value;\r\n");
      out.write("              if (selectedValue == \"custom\") {\r\n");
      out.write("                this.customPathTextField.value = this.toolCustomPath;\r\n");
      out.write("                this.customPathChanged();\r\n");
      out.write("                BS.Util.show(this.customPathContainer);\r\n");
      out.write("              } else {\r\n");
      out.write("                this.setValue(selectedValue);\r\n");
      out.write("                BS.Util.hide(this.customPathContainer);\r\n");
      out.write("              }\r\n");
      out.write("              BS.MultilineProperties.updateVisible();\r\n");
      out.write("            },\r\n");
      out.write("\r\n");
      out.write("            this.customPathChanged = function () {\r\n");
      out.write("              var versionCustomValue = this.customPathTextField.value;\r\n");
      out.write("              this.setValue(versionCustomValue);\r\n");
      out.write("              this.toolCustomPath = versionCustomValue;\r\n");
      out.write("            }\r\n");
      out.write("      }\r\n");
      out.write("\r\n");
      out.write("      if (result.length == 0) {\r\n");
      out.write("        var newSelector = new VersionSelector(toolType);\r\n");
      out.write("        this.selectors.push(newSelector);\r\n");
      out.write("        return newSelector;\r\n");
      out.write("      }\r\n");
      out.write("      return result[0];\r\n");
      out.write("    }\r\n");
      out.write("  };\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      if (_jspx_meth_props_005fhiddenProperty_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      if (_jspx_meth_forms_005fselect_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\r\n");
      out.write("<span class=\"smallNote\">Check installed ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${toolType.displayName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" versions in <a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\" target=\"_blank\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${toolType.displayName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" Tool Configuration</a></span>\r\n");
      out.write("\r\n");
      out.write("<div id=\"customPathContainer");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${toolType.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\">\r\n");
      out.write("  ");
      if (_jspx_meth_forms_005ftextField_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("  <span class=\"smallNote\">\r\n");
      out.write("    Specify a custom path to ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${toolType.targetFileDisplayName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(". Paths relative to the checkout directory are supported.\r\n");
      out.write("  </span>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<span class=\"error\" id=\"error_");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${versionRunnerParameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\"></span>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("  var versionSelector = BS.Tools.getVersionSelector('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${toolType.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("');\r\n");
      out.write("  versionSelector.init('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${versionRunnerParameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("', '");
      if (_jspx_meth_bs_005fforJs_005f0(_jspx_page_context))
        return;
      out.write("');\r\n");
      out.write("  versionSelector.selectionChanged();\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_props_005fhiddenProperty_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  props:hiddenProperty
    org.apache.jsp.tag.web.props.hiddenProperty_tag _jspx_th_props_005fhiddenProperty_005f0 = new org.apache.jsp.tag.web.props.hiddenProperty_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_props_005fhiddenProperty_005f0);
    try {
      _jspx_th_props_005fhiddenProperty_005f0.setJspContext(_jspx_page_context);
      // /toolLoader/toolSelectorEdit.jsp(79,0) name = name type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_props_005fhiddenProperty_005f0.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${versionRunnerParameterName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(79,0) name = value type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_props_005fhiddenProperty_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${selectedVersion.reference}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      _jspx_th_props_005fhiddenProperty_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_props_005fhiddenProperty_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_forms_005fselect_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  forms:select
    org.apache.jsp.tag.web.forms.select_tag _jspx_th_forms_005fselect_005f0 = new org.apache.jsp.tag.web.forms.select_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_forms_005fselect_005f0);
    try {
      _jspx_th_forms_005fselect_005f0.setJspContext(_jspx_page_context);
      // /toolLoader/toolSelectorEdit.jsp(81,0) name = name type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005fselect_005f0.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("toolPathSelector${toolType.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(81,0) name = className type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005fselect_005f0.setClassName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clazz}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(81,0) name = style type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005fselect_005f0.setStyle((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("padding:0; margin:0; ${style}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(81,0) name = onchange type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005fselect_005f0.setOnchange((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("BS.Tools.getVersionSelector('${toolType.type}').selectionChanged();", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      _jspx_th_forms_005fselect_005f0.setJspBody(new Helper( 0, _jspx_page_context, _jspx_th_forms_005fselect_005f0, null));
      _jspx_th_forms_005fselect_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_forms_005fselect_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /toolLoader/toolSelectorEdit.jsp(82,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!defaultVersionSpecified}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("    ");
          if (_jspx_meth_props_005foption_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("  ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_props_005foption_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  props:option
    org.apache.jsp.tag.web.props.option_tag _jspx_th_props_005foption_005f0 = new org.apache.jsp.tag.web.props.option_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_props_005foption_005f0);
    try {
      _jspx_th_props_005foption_005f0.setJspContext(_jspx_page_context);
      _jspx_th_props_005foption_005f0.setParent(_jspx_th_c_005fif_005f0);
      // /toolLoader/toolSelectorEdit.jsp(83,4) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_props_005foption_005f0.setValue("");
      // /toolLoader/toolSelectorEdit.jsp(83,4) name = selected type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_props_005foption_005f0.setSelected((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${selectedVersion != null}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      _jspx_th_props_005foption_005f0.setJspBody(new Helper( 1, _jspx_page_context, _jspx_th_props_005foption_005f0, null));
      _jspx_th_props_005foption_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_props_005foption_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /toolLoader/toolSelectorEdit.jsp(85,2) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("availableVersion");
      // /toolLoader/toolSelectorEdit.jsp(85,2) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${availableVersions}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("    ");
            if (_jspx_meth_props_005foption_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("  ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          throw new javax.servlet.jsp.SkipPageException();
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_props_005foption_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  props:option
    org.apache.jsp.tag.web.props.option_tag _jspx_th_props_005foption_005f1 = new org.apache.jsp.tag.web.props.option_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_props_005foption_005f1);
    try {
      _jspx_th_props_005foption_005f1.setJspContext(_jspx_page_context);
      _jspx_th_props_005foption_005f1.setParent(_jspx_th_c_005fforEach_005f0);
      // /toolLoader/toolSelectorEdit.jsp(86,4) name = value type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_props_005foption_005f1.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${availableVersion.reference}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(86,4) name = selected type = java.lang.Boolean reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_props_005foption_005f1.setSelected((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${availableVersion eq selectedVersion}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      _jspx_th_props_005foption_005f1.setJspBody(new Helper( 2, _jspx_page_context, _jspx_th_props_005foption_005f1, _jspx_push_body_count_c_005fforEach_005f0));
      _jspx_th_props_005foption_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_props_005foption_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fout_005f0(javax.servlet.jsp.tagext.JspTag _jspx_parent, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:out
    org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
    boolean _jspx_th_c_005fout_005f0_reused = false;
    try {
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(new javax.servlet.jsp.tagext.TagAdapter((javax.servlet.jsp.tagext.SimpleTag) _jspx_parent));
      // /toolLoader/toolSelectorEdit.jsp(86,106) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${availableVersion.displayName}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        throw new javax.servlet.jsp.SkipPageException();
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      _jspx_th_c_005fout_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fout_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fout_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /toolLoader/toolSelectorEdit.jsp(90,85) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${settingsUrl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_forms_005ftextField_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  forms:textField
    org.apache.jsp.tag.web.forms.textField_tag _jspx_th_forms_005ftextField_005f0 = new org.apache.jsp.tag.web.forms.textField_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_forms_005ftextField_005f0);
    try {
      _jspx_th_forms_005ftextField_005f0.setJspContext(_jspx_page_context);
      // /toolLoader/toolSelectorEdit.jsp(93,2) name = name type = java.lang.String reqTime = true required = true fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005ftextField_005f0.setName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("toolCustomPath${toolType.type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(93,2) name = className type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005ftextField_005f0.setClassName((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${clazz}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(93,2) name = style type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005ftextField_005f0.setStyle((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${style}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      // /toolLoader/toolSelectorEdit.jsp(93,2) name = onchange type = java.lang.String reqTime = true required = false fragment = false deferredValue = false expectedTypeName = java.lang.String deferredMethod = false methodSignature = null
      _jspx_th_forms_005ftextField_005f0.setOnchange((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("BS.Tools.getVersionSelector('${toolType.type}').customPathChanged();", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      _jspx_th_forms_005ftextField_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_forms_005ftextField_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_bs_005fforJs_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  bs:forJs
    org.apache.jsp.tag.web.forJs_tag _jspx_th_bs_005fforJs_005f0 = new org.apache.jsp.tag.web.forJs_tag();
    _jsp_getInstanceManager().newInstance(_jspx_th_bs_005fforJs_005f0);
    try {
      _jspx_th_bs_005fforJs_005f0.setJspContext(_jspx_page_context);
      _jspx_th_bs_005fforJs_005f0.setJspBody(new Helper( 3, _jspx_page_context, _jspx_th_bs_005fforJs_005f0, null));
      _jspx_th_bs_005fforJs_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_bs_005fforJs_005f0);
    }
    return false;
  }

  private class Helper
      extends org.apache.jasper.runtime.JspFragmentHelper
  {
    private javax.servlet.jsp.tagext.JspTag _jspx_parent;
    private int[] _jspx_push_body_count;

    public Helper( int discriminator, javax.servlet.jsp.JspContext jspContext, javax.servlet.jsp.tagext.JspTag _jspx_parent, int[] _jspx_push_body_count ) {
      super( discriminator, jspContext, _jspx_parent );
      this._jspx_parent = _jspx_parent;
      this._jspx_push_body_count = _jspx_push_body_count;
    }
    public boolean invoke0( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("\r\n");
      out.write("  ");
      if (_jspx_meth_c_005fif_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write("\r\n");
      out.write("  ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_parent, _jspx_page_context))
        return true;
      out.write('\r');
      out.write('\n');
      return false;
    }
    public boolean invoke1( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write("-- Select ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${toolType.displayName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write(" version to run --");
      return false;
    }
    public boolean invoke2( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      if (_jspx_meth_c_005fout_005f0(_jspx_parent, _jspx_page_context, _jspx_push_body_count))
        return true;
      return false;
    }
    public boolean invoke3( javax.servlet.jsp.JspWriter out ) 
      throws java.lang.Throwable
    {
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${toolCustomPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      return false;
    }
    public void invoke( java.io.Writer writer )
      throws javax.servlet.jsp.JspException
    {
      javax.servlet.jsp.JspWriter out = null;
      if( writer != null ) {
        out = this.jspContext.pushBody(writer);
      } else {
        out = this.jspContext.getOut();
      }
      try {
        Object _jspx_saved_JspContext = this.jspContext.getELContext().getContext(javax.servlet.jsp.JspContext.class);
        this.jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,this.jspContext);
        switch( this.discriminator ) {
          case 0:
            invoke0( out );
            break;
          case 1:
            invoke1( out );
            break;
          case 2:
            invoke2( out );
            break;
          case 3:
            invoke3( out );
            break;
        }
        jspContext.getELContext().putContext(javax.servlet.jsp.JspContext.class,_jspx_saved_JspContext);
      }
      catch( java.lang.Throwable e ) {
        if (e instanceof javax.servlet.jsp.SkipPageException)
            throw (javax.servlet.jsp.SkipPageException) e;
        throw new javax.servlet.jsp.JspException( e );
      }
      finally {
        if( writer != null ) {
          this.jspContext.popBody();
        }
      }
    }
  }
}
